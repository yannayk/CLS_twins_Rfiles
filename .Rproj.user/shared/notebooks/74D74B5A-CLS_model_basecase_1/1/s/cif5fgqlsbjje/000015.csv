"0","## Proportion screen positive"
"0","# CL <= 15"
"0","cl15_s1 <- 0"
"0","cl15_s2 <- s2_tree$vscx "
"0","cl15_s3 <- s3_tree$vscx + ((1 - p_cl25_t1) * s3_t2_branch$vscx)"
"0","v_cl15 <- c(cl15_s1, cl15_s2, cl15_s3)"
"0",""
"0","# CL <=25"
"0","cl25_s1 <- 0"
"0","cl25_s2 <- s2_tree$scx"
"0","cl25_s3 <- s3_tree$scx + ((1 - p_cl25_t1) * s3_t2_branch$scx)"
"0","v_cl25 <- c(cl25_s1, cl25_s2, cl25_s3) + v_cl15"
"0",""
"0","## Patients on progesterone (see Tree-related costs)"
"0","v_p <- c(0, sum(s2_p), sum(s3_p))"
"0",""
"0","## Patients having cerclage (see Tree-related costs)"
"0","v_cerc <- c(0, s2_cerc, s3_cerc)"
"0",""
"0","## PRE-TERM (< 37 weeks) probability"
"0","n_pret37_s1 <- sum(s1_GA[-5])"
"0","n_pret37_s2 <- sum(s2_GA[-5])"
"0","n_pret37_s3 <- sum(s3_GA[-5])"
"0",""
"0","# Probability preterm deliveries by strategy"
"0","v_n_pret37 <- c(n_pret37_s1, n_pret37_s2, n_pret37_s3)"
"0",""
"0","## PRE-TERM (< 34 weeks) probability"
"0","n_pret34_s1 <- sum(s1_GA[1:3])"
"0","n_pret34_s2 <- sum(s2_GA[1:3])"
"0","n_pret34_s3 <- sum(s3_GA[1:3])"
"0",""
"0","# Probability of preterm deliveries by strategy"
"0","v_n_pret34 <- c(n_pret34_s1, n_pret34_s2, n_pret34_s3)"
"0",""
"0","## PRE-TERM (< 32 weeks)"
"0","# Number of preterm deliveries per n pregnancies"
"0","n_pret32_s1 <- sum(s1_GA[1:2])"
"0","n_pret32_s2 <- sum(s2_GA[1:2])"
"0","n_pret32_s3 <- sum(s3_GA[1:2])"
"0",""
"0","# Number of preterm deliveries by strategy"
"0","v_n_pret32 <- c(n_pret32_s1, n_pret32_s2, n_pret32_s3)"
"0",""
"0","## EXTREME PRE-TERM (<28 weeks)"
"0","n_pret28_s1 <- s1_GA[1]"
"0","n_pret28_s2 <- s2_GA[1]"
"0","n_pret28_s3 <- s3_GA[1]"
"0",""
"0","# Number of preterm deliveries by strategy"
"0","v_n_pret28 <- c(n_pret28_s1, n_pret28_s2, n_pret28_s3)"
"0",""
"0","## STILLBIRTHS"
"0","# Probability of stillbirths by strategy per n pregnancies"
"0","n_sb_s1 <- sum(v_p_sb_GA * s1_GA) * twin_factor"
"0","n_sb_s2 <- sum(v_p_sb_GA * s2_GA) * twin_factor"
"0","n_sb_s3 <- sum(v_p_sb_GA * s3_GA) * twin_factor"
"0",""
"0","# Number of stillbirths by strategy"
"0","v_n_sb <- c(n_sb_s1, n_sb_s2, n_sb_s3)"
"0",""
"0","## LIFE-EXPECTANCY"
"0","# Assumption: state transition occurs at the beginning of each cycle"
"0","# (i.e. if you are alive in a given cycle, you are expected to live to the end of the year)"
"0",""
"0","# Function to calculate life expectancy for each GA Markov chain"
"0","life_exp <- function(m.){"
"0","  "
"0","  # Select only the alive state and add end zero"
"0","  # Zero is to allow the last line to be counted"
"0","  a <- c(m.[,1], 0)"
"0"," "
"0","  # Empty vector"
"0","  v <- c()"
"0","  "
"0","  # For each row, determine prop. that died "
"0","  for (i in 1:length(a)){"
"0","    v[i] <- a[i] - a[i+1]"
"0","  }"
"0","  "
"0","  # Multiply prop by years lived"
"0","  # Remove the NA (for the 0 row)"
"0","  le <- v[-102] * c(1:101)"
"0","  "
"0","  # Returns weighted average"
"0","  return(sum(le))"
"0","}"
"0",""
"0","# Calculate LE for each GA category"
"0","le_28 <- life_exp(m. = m_M_28)"
"0","le_32 <- life_exp(m. = m_M_32)"
"0","le_34 <- life_exp(m. = m_M_34)"
"0","le_37 <- life_exp(m. = m_M_37)"
"0","le_term <- life_exp(m. = m_M_term)"
"0","v_le <- c(le_28, le_32, le_34, le_37, le_term)"
"0",""
"0","# Calculate LE for each strategy"
"0","le_s1 <- sum(v_le * s1_GA) * twin_factor"
"0","le_s2 <- sum(v_le * s2_GA) * twin_factor"
"0","le_s3 <- sum(v_le * s3_GA) * twin_factor"
"0","v_le_strat <- c(le_s1, le_s2, le_s3)"
"0",""
"0","# TABLE: CLINICAL OUTCOMES"
"0","t_clin <- data.frame(""strategy"" = v_strats,"
"0","                     ""CL15"" = round(v_cl15, 3),"
"0","                     ""CL25"" = round(v_cl25, 3),"
"0","                     ""cerclage"" = round(v_cerc, 3),"
"0","                     ""progest"" = round(v_p, 3),"
"0","                     ""ptb37"" = round(v_n_pret37, 3),"
"0","                     ""ptb34"" = round(v_n_pret34, 3),"
"0","                     ""ptb32"" = round(v_n_pret32, 3),"
"0","                     ""ptb28"" = round(v_n_pret28, 3), "
"0","                     ""stillbirths"" = round(v_n_sb, 3),"
"0","                     ""LE"" = round(v_le_strat, 2)) # For one twin"
"0",""
"0","clin_table <- gt(t_clin, rowname_col = ""Strategy"") %>%"
"0","  tab_header(title = ""Clinical Outcomes"")"
"0",""
"0","clin_table"
